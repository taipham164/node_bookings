<% include("../functions") %>
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Select Date & Time - <%= location?.businessName || 'Booking System' %></title>
    <link href="/stylesheets/style.css" rel="stylesheet" type="text/css">
    <link href="/stylesheets/datepicker.css" rel="stylesheet" type="text/css">
    <link href="/stylesheets/sidebar.css" rel="stylesheet" type="text/css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="/javascripts/appointment-summary.js?v=<%= Date.now() %>" defer></script>
    <style>
        .availability-container {
            max-width: none;
            margin: 0;
            padding: 2rem 0;
            padding-bottom: 120px; /* Add space for floating button */
            width: 100%;
            box-sizing: border-box;
            overflow-x: hidden;
        }
        .calendar-section {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.08);
            width: 100%;
            max-width: 100%;
            box-sizing: border-box;
        }
        .times-section {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.08);
            width: 100%;
            max-width: 100%;
            box-sizing: border-box;
        }
        .section-header {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 1.5rem;
        }
        .section-header h4 {
            margin: 0;
            color: #333;
            font-size: 1.3rem;
        }
        .section-header i {
            color: #667eea;
            font-size: 1.5rem;
        }
        .timezone-warning {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        .timezone-warning i {
            color: #f39c12;
            font-size: 1.2rem;
        }
        .info-notice {
            background: #e3f2fd;
            color: #1976d2;
            border: 1px solid #bbdefb;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        .info-notice i {
            color: #2196f3;
            font-size: 1.2rem;
        }
        .times-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
            gap: 1rem;
            margin-top: 1rem;
            width: 100%;
            max-width: 100%;
            box-sizing: border-box;
        }
        .time-slot {
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 1rem;
            text-align: center;
            text-decoration: none;
            color: #333;
            font-weight: 600;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        .time-slot::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.1), transparent);
            transition: left 0.5s ease;
        }
        .time-slot:hover::before {
            left: 100%;
        }
        .time-slot:hover {
            border-color: #667eea;
            background: #f0f7ff;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.2);
        }
        .time-slot i {
            display: block;
            margin-bottom: 0.5rem;
            color: #667eea;
            font-size: 1.1rem;
        }
        .no-times {
            text-align: center;
            padding: 3rem 1rem;
            color: #6c757d;
        }
        .no-times i {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }
        .selected-date-display {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 10px;
            padding: 1rem;
            text-align: center;
            margin-bottom: 1.5rem;
            display: none;
        }
        .selected-date-display.show {
            display: block;
        }
        
        /* Layout adjustments for the new flex structure */
        .content {
            min-height: calc(100vh - 200px);
        }
        
        /* Desktop layout improvements */
        @media (min-width: 769px) {
            .content-main {
                padding-right: 1rem;
            }
            
            /* Ensure appointment summary is visible and properly sized */
            #appointment-summary {
                flex: 1 1 0;
                min-width: 300px;
                max-width: 400px;
                position: static !important;
                transform: none !important;
                height: fit-content;
                align-self: flex-start;
                position: sticky;
                top: 2rem;
            }
        }
        
        @media (max-width: 768px) {
            .content {
                flex-direction: column !important;
                gap: 0 !important;
            }
            
            .content-main {
                flex: none !important;
                width: 100% !important;
                padding-right: 0 !important;
            }
            
            .availability-container {
                padding: 1rem !important;
                padding-bottom: 120px !important;
            }
            .calendar-section, .times-section {
                padding: 1.5rem;
                margin-bottom: 1.5rem;
            }
            .times-grid {
                grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
                gap: 1rem;
            }
            .time-slot {
                padding: 1rem;
                font-size: 0.95rem;
                min-height: 60px;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
            }
            .time-slot i {
                font-size: 1rem;
                margin-bottom: 0.25rem;
            }
        }
        
        @media (max-width: 480px) {
            .availability-container {
                padding: 0.75rem !important;
                padding-bottom: 120px !important;
            }
            .calendar-section, .times-section {
                padding: 1rem;
                margin-bottom: 1rem;
            }
            .times-grid {
                grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
                gap: 0.75rem;
            }
            .time-slot {
                padding: 0.75rem;
                font-size: 0.9rem;
                min-height: 55px;
            }
            .time-slot i {
                font-size: 0.9rem;
                margin-bottom: 0.25rem;
            }
            .section-header h4 {
                font-size: 1.1rem;
            }
            .section-header i {
                font-size: 1.2rem;
            }
        }
        
        @media (max-width: 360px) {
            .availability-container {
                padding: 0.5rem !important;
                padding-bottom: 120px !important;
            }
            .calendar-section, .times-section {
                padding: 0.75rem;
                border-radius: 10px;
            }
            .times-grid {
                grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
                gap: 0.5rem;
            }
            .time-slot {
                padding: 0.5rem;
                font-size: 0.85rem;
                min-height: 50px;
                border-radius: 8px;
            }
            .time-slot i {
                font-size: 0.8rem;
                margin-bottom: 0.2rem;
            }
            .section-header {
                gap: 0.5rem;
                margin-bottom: 1rem;
            }
            .section-header h4 {
                font-size: 1rem;
            }
            .section-header i {
                font-size: 1.1rem;
            }
        }
        
        /* Hide continue buttons on availability page */
        #continue-btn,
        #summary-bar-next,
        #summary-sheet-next {
            display: none !important;
        }
    </style>
</head>

<body>
    <header>
        <%- include("../partials/header") %>
    </header>
    
    <div class="content" style="display: flex; flex-direction: row; gap: 2.5em;">
        <!-- Main availability selection -->
        <div class="content-main" style="flex: 2 1 0;">
            <!-- Back Button -->
            <div style="margin-bottom: 2rem;">
                <a class="button" href="/staff/<%= serviceId %>?version=<%= serviceVersion %>">
                    <span class="icon back-arrow"></span> Back to Staff Selection
                </a>
            </div>
            
            <div class="availability-container">
                <!-- Timezone Warning -->
                <% if (getLocalTimezone() !== location.timezone) { %>
                    <div class="timezone-warning">
                        <i class="fas fa-exclamation-triangle"></i>
                        <div>
                            <strong>Different Timezone Detected!</strong><br>
                            Times below are shown in <%= location.timezone %> time (business local time).
                        </div>
                    </div>
                <% } %>

                <!-- Info Notice -->
                <div class="info-notice">
                    <i class="fas fa-info-circle"></i>
                    <div>
                        You can schedule an appointment between 4 hours and 30 days ahead of time.
                    </div>
                </div>

                <!-- Calendar Section -->
                <div class="calendar-section">
                    <div class="section-header">
                        <i class="fas fa-calendar-alt"></i>
                        <h4>Select Appointment Date</h4>
                    </div>
                    <div id="datepicker"></div>
                </div>

                <!-- Selected Date Display -->
                <div id="selected-date-display" class="selected-date-display">
                    <h5 style="margin: 0 0 0.5rem 0;">
                        <i class="fas fa-calendar-check me-2"></i>
                        Selected Date
                    </h5>
                    <p style="margin: 0; font-size: 1.1rem;" id="selected-date-text"></p>
                </div>

                <!-- Times Section -->
                <div class="times-section">
                    <div class="section-header">
                        <i class="fas fa-clock"></i>
                        <h4>Available Times</h4>
                    </div>
                    
                    <div id="available-times">
                        <div class="no-times">
                            <i class="fas fa-calendar-day"></i>
                            <h5>Select a Date</h5>
                            <p>Please select a date from the calendar above to view available time slots.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Include the appointment summary partial -->
        <%- include("../partials/appointment-summary") %>
    </div>

    <!-- Scripts -->
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="/js/date-picker-handler.js"></script>
    
    <script>
        $(function() {
            $("#datepicker").datepicker({
                beforeShowDay: function(date) {
                    return datePickerHandler.isSelectable(date);
                },
                dateFormat: 'yy-mm-dd',
                minDate: 0,
                maxDate: "30d",
                onSelect: function(dateText) {
                    console.log('Date selected:', dateText);
                    
                    // Update selected date display
                    // Parse the date string safely to avoid timezone issues
                    const [year, month, day] = dateText.split('-').map(num => parseInt(num, 10));
                    const selectedDate = new Date(year, month - 1, day); // month is 0-indexed
                    console.log('Parsed date object:', selectedDate);
                    console.log('Selected day:', selectedDate.getDate());
                    
                    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                    const formattedDate = selectedDate.toLocaleDateString('en-US', options);
                    console.log('Formatted date:', formattedDate);
                    
                    document.getElementById('selected-date-text').textContent = formattedDate;
                    document.getElementById('selected-date-display').classList.add('show');
                    
                    // Update available times
                    datePickerHandler.selectNewDate(dateText);
                }
            });
            
            $("#datepicker").on("change", function() {
                datePickerHandler.selectNewDate($(this).val());
            });
        });

        // Enhanced DatePickerHandler to improve UI
        class EnhancedDatePickerHandler extends DatePickerHandler {
            selectNewDate(date) {
                const availableTimesDiv = document.getElementById("available-times");
                availableTimesDiv.innerHTML = "";
                
                const availabilities = this.availabilityMap[date];
                
                if (!availabilities) {
                    const noTimesContainer = document.createElement("div");
                    noTimesContainer.className = "no-times-available-container";
                    
                    const noTimesDiv = document.createElement("div");
                    noTimesDiv.className = "no-times";
                    noTimesDiv.innerHTML = `
                        <i class="fas fa-calendar-times"></i>
                        <h5>No Times Available</h5>
                        <p>There are no available time slots for this date.</p>
                    `;
                    
                    // Check if there's a next available date
                    const nextDate = this.findNextAvailableDate(date);
                    if (nextDate) {
                        const nextAvailableBtn = document.createElement("button");
                        nextAvailableBtn.className = "btn-next-available";
                        nextAvailableBtn.type = "button";
                        nextAvailableBtn.innerHTML = `
                            <i class="fas fa-arrow-right"></i>
                            Go to Next Available
                        `;
                        nextAvailableBtn.onclick = () => this.goToNextAvailable(date);
                        
                        const nextDateFormatted = this.formatDateForDisplay(nextDate);
                        
                        const nextDateInfo = document.createElement("p");
                        nextDateInfo.className = "next-date-info";
                        nextDateInfo.innerHTML = `Next available: ${nextDateFormatted}`;
                        
                        noTimesContainer.appendChild(noTimesDiv);
                        noTimesContainer.appendChild(nextDateInfo);
                        noTimesContainer.appendChild(nextAvailableBtn);
                    } else {
                        noTimesDiv.querySelector('p').innerHTML = "There are no available time slots for this date. Please select a different date.";
                        noTimesContainer.appendChild(noTimesDiv);
                    }
                    
                    availableTimesDiv.appendChild(noTimesContainer);
                    return;
                }

                // Create times grid container
                const timesGrid = document.createElement("div");
                timesGrid.className = "times-grid";
                
                availabilities.forEach((availability) => {
                    const form = document.createElement("form");
                    form.action = this.bookingId ? 
                        `/booking/${this.bookingId}/reschedule?startAt=${availability.date}` : 
                        "/contact";
                    form.method = this.bookingId ? "post" : "get";
                    
                    // Create hidden parameters for GET contact action
                    if (form.method === "get") {
                        const queryParams = {
                            serviceId: this.serviceId,
                            staff: availability.teamMemberId,
                            startAt: availability.date,
                            version: this.serviceVersion,
                        };
                        Object.keys(queryParams).forEach(queryParam => {
                            const input = document.createElement("input");
                            input.type = "hidden";
                            input.name = queryParam;
                            input.value = queryParams[queryParam];
                            form.appendChild(input);
                        });
                    }
                    
                    const timeSlot = document.createElement("button");
                    timeSlot.className = "time-slot";
                    timeSlot.type = "submit";
                    timeSlot.innerHTML = `
                        <i class="fas fa-clock"></i>
                        ${availability.time}
                    `;
                    
                    form.appendChild(timeSlot);
                    timesGrid.appendChild(form);
                });
                
                availableTimesDiv.appendChild(timesGrid);
            }
            
            goToNextAvailable(currentDate) {
                const nextDate = this.findNextAvailableDate(currentDate);
                if (nextDate) {
                    // Update the datepicker widget
                    $("#datepicker").datepicker("setDate", nextDate);
                    
                    // Update the date title display
                    const formattedDate = this.formatDateForDisplay(nextDate);
                    const selectedDateText = document.getElementById('selected-date-text');
                    if (selectedDateText) {
                        selectedDateText.textContent = formattedDate;
                    }
                    const selectedDateDisplay = document.getElementById('selected-date-display');
                    if (selectedDateDisplay) {
                        selectedDateDisplay.classList.add('show');
                    }
                    
                    // Trigger the date selection
                    this.selectNewDate(nextDate);
                }
            }
        }

        // Initialize enhanced date picker handler
        const datePickerHandler = new EnhancedDatePickerHandler(
            <%- JSON.stringify(availabilities) %>, 
            "<%- serviceId %>", 
            "<%- serviceVersion %>", 
            "<%- locals.bookingId %>", 
            "<%- location.timezone %>"
        );

        // Add smooth scrolling to times section when date is selected
        document.addEventListener('DOMContentLoaded', function() {
            const originalSelectNewDate = datePickerHandler.selectNewDate.bind(datePickerHandler);
            datePickerHandler.selectNewDate = function(date) {
                originalSelectNewDate(date);
                
                // Smooth scroll to times section
                setTimeout(() => {
                    document.querySelector('.times-section').scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }, 100);
            };
        });
    </script>
    
    <script>
        // Debug what data is available from the server - RAW EJS
        console.log('DEBUG: EJS serviceDetails available:', <% if (typeof serviceDetails !== 'undefined') { %>true<% } else { %>false<% } %>);
        console.log('DEBUG: EJS bookingProfile available:', <% if (typeof bookingProfile !== 'undefined') { %>true<% } else { %>false<% } %>);
        
        // Debug what data is available from the server
        console.log('DEBUG: Server data check:');
        console.log('DEBUG: typeof serviceDetails:', typeof serviceDetails);
        console.log('DEBUG: serviceDetails:', typeof serviceDetails !== 'undefined' ? serviceDetails : 'UNDEFINED');
        console.log('DEBUG: typeof bookingProfile:', typeof bookingProfile);
        console.log('DEBUG: bookingProfile:', typeof bookingProfile !== 'undefined' ? bookingProfile : 'UNDEFINED');
        console.log('DEBUG: All template variables available:');
        console.log('  - serviceDetails:', typeof serviceDetails !== 'undefined');
        console.log('  - bookingProfile:', typeof bookingProfile !== 'undefined');
        console.log('  - availabilities:', typeof availabilities !== 'undefined');
        console.log('  - serviceId:', typeof serviceId !== 'undefined');
        console.log('  - selectedServices:', typeof selectedServices !== 'undefined');
        console.log('  - quantities:', typeof quantities !== 'undefined');
        
        // Make service details available to appointment summary JavaScript
        <% if (typeof serviceDetails !== 'undefined' && serviceDetails) { %>
            window.serviceDetails = <%- JSON.stringify(serviceDetails) %>;
            console.log('DEBUG: serviceDetails SET from server data');
        <% } else { %>
            window.serviceDetails = [];
            console.log('DEBUG: serviceDetails set to EMPTY ARRAY - server had no data');
        <% } %>
        
        <% if (typeof bookingProfile !== 'undefined' && bookingProfile) { %>
            window.selectedStaff = {
                id: "<%= bookingProfile.teamMemberId %>",
                name: "<%= bookingProfile.displayName %>",
                description: <%- JSON.stringify(bookingProfile.description || '') %>
            };
            console.log('DEBUG: selectedStaff SET from bookingProfile');
        <% } else { %>
            window.selectedStaff = {
                id: "anyStaffMember",
                name: "Any Available Staff",
                description: ""
            };
            console.log('DEBUG: selectedStaff set to ANY STAFF - no bookingProfile from server');
        <% } %>
        
        console.log('DEBUG: window.serviceDetails set to:', window.serviceDetails);
        console.log('DEBUG: window.selectedStaff set to:', window.selectedStaff);
        console.log('DEBUG: typeof window.serviceDetails:', typeof window.serviceDetails);
        console.log('DEBUG: Array.isArray(window.serviceDetails):', Array.isArray(window.serviceDetails));
        console.log('DEBUG: window.serviceDetails.length:', window.serviceDetails ? window.serviceDetails.length : 'undefined');
        
        // Ensure appointment summary is initialized
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Availability page loaded');
            
            // Additional debugging for appointment summary initialization
            console.log('DEBUG: DOM loaded - window.serviceDetails:', window.serviceDetails);
            console.log('DEBUG: DOM loaded - window.selectedStaff:', window.selectedStaff);
            
            // Initialize availability page appointment summary
            if (typeof initAvailabilityPageSummary === 'function') {
                setTimeout(function() {
                    console.log('DEBUG: About to call initAvailabilityPageSummary');
                    initAvailabilityPageSummary();
                }, 100);
            } else {
                console.error('DEBUG: initAvailabilityPageSummary function not found');
            }
        });
    </script>
</body>
</html>