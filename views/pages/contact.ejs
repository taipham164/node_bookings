<% include("../functions") %>
<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Enter Details - <%= location?.businessName || 'Booking System' %></title>
  <link rel="stylesheet" href="/stylesheets/style.css" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <style>
    .contact-container {
      max-width: 800px;
      margin: 0 auto;
      padding: 2rem;
    }
    .form-step {
      background: #f8f9fa;
      border-radius: 10px;
      padding: 1.5rem;
      margin-bottom: 1.5rem;
      border-left: 4px solid #28a745;
    }
    .form-step.active {
      border-left-color: #667eea;
      background: #f0f7ff;
    }
    .form-group {
      margin-bottom: 1.5rem;
    }
    .form-group label {
      display: block;
      font-weight: 600;
      margin-bottom: 0.5rem;
      color: #333;
    }
    .form-group input,
    .form-group textarea {
      width: 100%;
      padding: 12px 16px;
      border: 2px solid #e9ecef;
      border-radius: 8px;
      font-size: 16px;
      transition: border-color 0.2s ease;
      box-sizing: border-box;
    }
    .form-group input:focus,
    .form-group textarea:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }
    .form-row {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1rem;
    }
    .phone-field {
      position: relative;
    }
    .phone-field .helper-text {
      font-size: 0.875rem;
      color: #6c757d;
      margin-top: 0.25rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .optional-badge {
      background: #e3f2fd;
      color: #1976d2;
      padding: 0.25rem 0.5rem;
      border-radius: 12px;
      font-size: 0.75rem;
      font-weight: 500;
    }
    .benefits-list {
      background: #f8f9fa;
      border-radius: 8px;
      padding: 1rem;
      margin-top: 1rem;
    }
    .benefits-list h6 {
      margin: 0 0 0.5rem 0;
      color: #333;
      font-weight: 600;
    }
    .benefits-list ul {
      margin: 0;
      padding-left: 1.25rem;
      color: #666;
      font-size: 0.9rem;
    }
    .benefits-list li {
      margin-bottom: 0.25rem;
    }
    .submit-btn {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      padding: 1rem 2rem;
      border-radius: 8px;
      font-size: 1.1rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      width: 100%;
      margin-top: 1rem;
    }
    .submit-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 20px rgba(102, 126, 234, 0.3);
    }
    .btn-secondary {
      background: #6c757d;
      color: white;
      border: none;
      padding: 0.75rem 1.5rem;
      border-radius: 8px;
      font-size: 1rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-left: 1rem;
    }
    .btn-secondary:hover {
      background: #5a6268;
      transform: translateY(-1px);
    }
    .button-group {
      display: flex;
      align-items: center;
      flex-wrap: wrap;
      gap: 1rem;
      margin-top: 1.5rem;
    }
    .customer-info-display {
      background: #e8f5e8;
      border: 1px solid #c3e6c3;
      border-radius: 8px;
      padding: 1.5rem;
      margin: 1rem 0;
    }
    .customer-info-display h6 {
      margin: 0 0 1rem 0;
      color: #155724;
      font-weight: 600;
    }
    .customer-info-display .info-item {
      display: flex;
      align-items: center;
      margin-bottom: 0.5rem;
    }
    .customer-info-display .info-item i {
      width: 20px;
      margin-right: 0.5rem;
      color: #28a745;
    }
    .loading-spinner {
      display: inline-block;
      width: 20px;
      height: 20px;
      border: 3px solid #f3f3f3;
      border-top: 3px solid #667eea;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    .hidden {
      display: none !important;
    }
    @media (max-width: 768px) {
      .form-row {
        grid-template-columns: 1fr;
      }
      .contact-container {
        padding: 1rem;
      }
    }
  </style>
</head>

<body>
  <header>
    <%- include("../partials/header") %>
  </header>

  <div class="content">
    <div class="content-left">
      <a class="button" href="/availability/<%= teamMemberBookingProfile.teamMemberId %>/<%= serviceVariation.id %>?version=<%= serviceVersion %>">
        <span class="icon back-arrow"></span> Back
      </a>
      <div class="steps">
        <div class="steps__step">
          <div class="steps__step-wrapper">
            <div class="steps__step-title">
              <span>Services</span>
              <a href="/services">Edit</a>
            </div>
            <div class="steps__step-body">
              <% if (serviceDetails && serviceDetails.length > 0) { %>
                <ul>
                  <% serviceDetails.forEach(function(s) { %>
                    <li>
                      <%= s.name %><% if (s.quantity > 1) { %> (x<%= s.quantity %>)<% } %> - <%= formatTime(s.duration) %>
                    </li>
                  <% }); %>
                </ul>
              <% } %>
            </div>
          </div>
        </div>
        <div class="steps__step">
          <div class="steps__step-wrapper">
            <div class="steps__step-title">
              <span>Select staff</span>
              <a href="/staff/<%= serviceVariation.id %>?version=<%= serviceVersion %>">Edit</a>
            </div>
            <div class="availability-staff__card-wrapper">
              <div class="staff__card-picture-wrapper">
                <% if (teamMemberBookingProfile.profileImageUrl) { %>
                  <img src="<%= teamMemberBookingProfile.profileImageUrl %>" />
                <% } else { %>
                  <%= getStaffInitials(teamMemberBookingProfile.displayName) %>
                <% } %>
              </div>
              <div class="steps__staff-step-body">
                <div class="steps__step-name">
                  <%= teamMemberBookingProfile.displayName %>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="steps__step">
          <div class="steps__step-wrapper">
            <div class="steps__step-title">
              <span>Appointment time</span>
              <a href="/availability/<%= teamMemberBookingProfile.teamMemberId %>/<%= serviceVariation.id %>?version=<%= serviceVersion %>">Edit</a>
            </div>
            <div class="steps__step-body">
              <div class="steps__step-name">
                <%= convertDateToText(startAt, location.timezone) %>
              </div>
              <div class="steps__step-description">
                <%= convertTimeToText(startAt, location.timezone) %>
              </div>
            </div>
          </div>
        </div>
        <div class="steps__step selected">
          <div class="steps__step-wrapper">
            <div class="steps__step-title">
              <span>Enter your details</span>
              <span class="icon side-caret-selected"></span>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <div class="content-main">
      <div class="contact-container">
        <% if (typeof error !== 'undefined' && error) { %>
          <div class="popup-error-overlay">
            <div class="popup-error-dialog">
              <span class="popup-error-close" onclick="this.parentElement.parentElement.style.display='none'">&times;</span>
              <h5>Notice</h5>
              <span><%= error %></span>
            </div>
          </div>
        <% } %>
        
        <h4><i class="fas fa-phone me-2"></i>Complete Your Booking</h4>
        <p class="text-muted">Please provide your phone number to continue with your booking.</p>
        
        <!-- Phone Number Verification Step -->
        <div id="phoneStep" class="form-step active">
          <h6><i class="fas fa-mobile-alt me-2"></i>Phone Number Verification</h6>
          <p class="text-muted">Enter your phone number to check if you're an existing customer.</p>
          
          <div class="form-group phone-field">
            <label for="phoneNumber">
              <i class="fas fa-phone me-1"></i>Phone Number *
            </label>
            <input 
              type="tel" 
              id="phoneNumber"
              name="phoneNumber" 
              required
              placeholder="(916) 123-4567"
              autocomplete="tel"
            />
            <div class="helper-text">
              <i class="fas fa-info-circle text-primary"></i>
              We'll check if you're an existing customer to streamline your booking
            </div>
          </div>
          
          <button type="button" id="verifyPhoneBtn" class="submit-btn">
            <i class="fas fa-search me-2"></i>
            Check Phone Number
          </button>
        </div>
        
        <!-- Customer Information Form (Hidden Initially) -->
        <form id="bookingForm" class="contact-form" method="POST" action="/booking/create?serviceId=<%= serviceVariation.id %>&staffId=<%= teamMemberBookingProfile.teamMemberId %>&version=<%= serviceVersion %>&startAt=<%= startAt %>" style="display: none;">
          <!-- Hidden fields for multi-service support -->
          <% if (selectedServices && selectedServices.length > 1) { %>
            <% selectedServices.forEach(function(sid) { %>
              <input type="hidden" name="services[]" value="<%= sid %>">
              <% if (quantities && quantities[sid]) { %>
                <input type="hidden" name="quantities[<%= sid %>]" value="<%= quantities[sid] %>">
              <% } %>
            <% }); %>
          <% } %>
          
          <!-- Hidden phone field to pass verified phone -->
          <input type="hidden" id="verifiedPhone" name="phoneNumber" value="">
          
          <!-- Existing Customer Confirmation (Hidden Initially) -->
          <div id="existingCustomerStep" class="form-step" style="display: none;">
            <h6><i class="fas fa-user-check me-2"></i>Welcome Back!</h6>
            <div id="customerInfo" class="customer-info-display">
              <!-- Customer info will be populated here -->
            </div>
            <p class="text-muted">Is this information correct?</p>
            
            <div class="form-group">
              <label for="existingCustomerNote">
                <i class="fas fa-comment me-1"></i>Appointment Notes (Optional)
              </label>
              <textarea 
                id="existingCustomerNote"
                name="existingCustomerNote" 
                placeholder="Any special requests or notes for your appointment..."
                maxlength="1500" 
                rows="4"
              ></textarea>
            </div>
            
            <div class="button-group">
              <button type="button" id="confirmExistingBtn" class="submit-btn">
                <i class="fas fa-calendar-check me-2"></i>
                Confirm & Book Appointment
              </button>
              <button type="button" id="updateInfoBtn" class="btn btn-secondary">
                <i class="fas fa-edit me-2"></i>
                Update My Information
              </button>
            </div>
          </div>
          
          <!-- New Customer Form (Hidden Initially) -->
          <div id="newCustomerStep" class="form-step" style="display: none;">
            <h6><i class="fas fa-user-plus me-2"></i>New Customer Information</h6>
            <p class="text-muted">Please provide your details to create your customer profile.</p>
            
            <div class="form-row">
              <div class="form-group">
                <label for="givenName">
                  <i class="fas fa-user me-1"></i>First Name *
                </label>
                <input 
                  type="text" 
                  id="givenName"
                  name="givenName" 
                  required 
                  maxlength="50" 
                  placeholder="Enter your first name"
                  autocomplete="given-name"
                />
              </div>
              
              <div class="form-group">
                <label for="familyName">
                  <i class="fas fa-user me-1"></i>Last Name *
                </label>
                <input 
                  type="text" 
                  id="familyName"
                  name="familyName" 
                  required 
                  maxlength="50" 
                  placeholder="Enter your last name"
                  autocomplete="family-name"
                />
              </div>
            </div>
            
            <div class="form-group">
              <label for="emailAddress">
                <i class="fas fa-envelope me-1"></i>Email Address *
              </label>
              <input 
                type="email" 
                id="emailAddress"
                name="emailAddress" 
                required 
                maxlength="320" 
                placeholder="Enter your email address"
                pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,4}$" 
                title="Please enter a valid email address"
                autocomplete="email"
              />
            </div>
            
            <div class="form-group">
              <label for="newCustomerNote">
                <i class="fas fa-comment me-1"></i>Appointment Notes (Optional)
              </label>
              <textarea 
                id="newCustomerNote"
                name="newCustomerNote" 
                placeholder="Any special requests or notes for your appointment..."
                maxlength="1500" 
                rows="4"
              ></textarea>
            </div>
            
            <button type="submit" class="submit-btn">
              <i class="fas fa-calendar-check me-2"></i>
              Create Account & Book Appointment
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Phone number formatting
      const phoneInput = document.getElementById('phoneNumber');
      const verifyPhoneBtn = document.getElementById('verifyPhoneBtn');
      const phoneStep = document.getElementById('phoneStep');
      const bookingForm = document.getElementById('bookingForm');
      const existingCustomerStep = document.getElementById('existingCustomerStep');
      const newCustomerStep = document.getElementById('newCustomerStep');
      const verifiedPhoneInput = document.getElementById('verifiedPhone');
      
      if (phoneInput) {
        let lastValue = '';
        
        phoneInput.addEventListener('input', function(e) {
          const currentValue = e.target.value;
          const cursorPos = e.target.selectionStart;
          const isDeleting = currentValue.length < lastValue.length;
          
          // Get just the digits
          let digits = currentValue.replace(/\D/g, '');
          
          // Don't format if user is deleting and would result in same formatted value
          if (isDeleting && digits.length <= 3) {
            e.target.value = digits;
            lastValue = digits;
            if (verifyPhoneBtn) {
              verifyPhoneBtn.disabled = true;
            }
            return;
          }
          
          // Format the number
          let formatted = '';
          if (digits.length >= 10) {
            formatted = digits.replace(/(\d{3})(\d{3})(\d{4})/, '($1) $2-$3');
          } else if (digits.length >= 6) {
            formatted = digits.replace(/(\d{3})(\d{3})(\d{0,4})/, '($1) $2-$3');
          } else if (digits.length >= 3) {
            formatted = digits.replace(/(\d{3})(\d{0,3})/, '($1) $2');
          } else {
            formatted = digits;
          }
          
          e.target.value = formatted;
          lastValue = formatted;
          
          // Restore cursor position intelligently
          let newCursorPos = cursorPos;
          if (!isDeleting && formatted.length > currentValue.length) {
            // If we added formatting characters, adjust cursor
            const addedChars = formatted.length - currentValue.length;
            newCursorPos = cursorPos + addedChars;
          }
          e.target.setSelectionRange(newCursorPos, newCursorPos);
          
          // Enable/disable verify button based on phone length
          if (verifyPhoneBtn) {
            verifyPhoneBtn.disabled = digits.length < 10;
          }
        });
        
        // Handle backspace and delete keys specifically
        phoneInput.addEventListener('keydown', function(e) {
          if (e.key === 'Backspace' || e.key === 'Delete') {
            const cursorPos = e.target.selectionStart;
            const currentValue = e.target.value;
            
            // If cursor is after a formatting character, skip over it
            if (e.key === 'Backspace' && cursorPos > 0) {
              const charBefore = currentValue[cursorPos - 1];
              if (charBefore === '(' || charBefore === ')' || charBefore === ' ' || charBefore === '-') {
                e.target.setSelectionRange(cursorPos - 1, cursorPos - 1);
              }
            }
          }
        });
      }
      
      // Phone verification handler
      if (verifyPhoneBtn) {
        verifyPhoneBtn.addEventListener('click', async function() {
          const phone = phoneInput.value.replace(/\D/g, '');
          
          if (phone.length < 10) {
            alert('Please enter a valid 10-digit phone number');
            return;
          }
          
          // Show loading state
          const originalText = verifyPhoneBtn.innerHTML;
          verifyPhoneBtn.innerHTML = '<span class="loading-spinner"></span> Checking...';
          verifyPhoneBtn.disabled = true;
          
          try {
            // Check if customer exists
            const response = await fetch('/customer/check-phone', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ phoneNumber: phoneInput.value })
            });
            
            const result = await response.json();
            
            // Store verified phone number
            verifiedPhoneInput.value = phoneInput.value;
            
            // Hide phone step and show booking form
            phoneStep.style.display = 'none';
            bookingForm.style.display = 'block';
            
            if (result.exists) {
              // Show existing customer flow
              showExistingCustomer(result.customer);
            } else {
              // Show new customer flow
              showNewCustomer();
            }
            
          } catch (error) {
            console.error('Error checking phone:', error);
            alert('Error checking phone number. Please try again.');
            
            // Reset button state on error
            verifyPhoneBtn.innerHTML = originalText;
            verifyPhoneBtn.disabled = phone.replace(/\D/g, '').length < 10;
          }
        });
      }
      
      function showExistingCustomer(customer) {
        existingCustomerStep.style.display = 'block';
        newCustomerStep.style.display = 'none';
        
        // Populate customer info
        const customerInfo = document.getElementById('customerInfo');
        customerInfo.innerHTML = `
          <h6><i class="fas fa-user-check me-2"></i>Customer Information</h6>
          <div class="info-item">
            <i class="fas fa-user"></i>
            <span><strong>Name:</strong> ${customer.givenName || ''} ${customer.familyName || ''}</span>
          </div>
          <div class="info-item">
            <i class="fas fa-envelope"></i>
            <span><strong>Email:</strong> ${customer.emailAddress || 'Not provided'}</span>
          </div>
          <div class="info-item">
            <i class="fas fa-phone"></i>
            <span><strong>Phone:</strong> ${phoneInput.value}</span>
          </div>
        `;
        
        // Store customer info in hidden fields
        addHiddenField('customerId', customer.id);
        addHiddenField('givenName', customer.givenName || '');
        addHiddenField('familyName', customer.familyName || '');
        addHiddenField('emailAddress', customer.emailAddress || '');
      }
      
      function showNewCustomer() {
        existingCustomerStep.style.display = 'none';
        newCustomerStep.style.display = 'block';
      }
      
      function addHiddenField(name, value) {
        // Remove existing field if it exists
        const existing = bookingForm.querySelector(`input[name="${name}"]`);
        if (existing) {
          existing.remove();
        }
        
        // Add new hidden field
        const hiddenField = document.createElement('input');
        hiddenField.type = 'hidden';
        hiddenField.name = name;
        hiddenField.value = value;
        bookingForm.appendChild(hiddenField);
      }
      
      // Confirm existing customer handler
      const confirmExistingBtn = document.getElementById('confirmExistingBtn');
      if (confirmExistingBtn) {
        confirmExistingBtn.addEventListener('click', function() {
          // Submit the form for existing customer
          confirmExistingBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Booking...';
          confirmExistingBtn.disabled = true;
          bookingForm.submit();
        });
      }
      
      // Update info handler
      const updateInfoBtn = document.getElementById('updateInfoBtn');
      if (updateInfoBtn) {
        updateInfoBtn.addEventListener('click', function() {
          // Switch to new customer form to update info
          showNewCustomer();
        });
      }

      // Form submission handler for new customers
      if (bookingForm) {
        bookingForm.addEventListener('submit', function(e) {
          const email = document.getElementById('emailAddress');
          const firstName = document.getElementById('givenName');
          const lastName = document.getElementById('familyName');
          const submitBtn = bookingForm.querySelector('button[type="submit"]');
          
          // Only validate if new customer form is visible
          if (newCustomerStep.style.display !== 'none') {
            if (!firstName.value.trim() || !lastName.value.trim() || !email.value.trim()) {
              e.preventDefault();
              alert('Please fill in all required fields.');
              return;
            }
            
            // Email validation
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email.value)) {
              e.preventDefault();
              alert('Please enter a valid email address.');
              return;
            }
          }
          
          // Show loading state
          if (submitBtn) {
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Creating Booking...';
          }
        });
      }
    });
  </script>
</body>
</html>