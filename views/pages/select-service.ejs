<% include("../functions") %>
<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Select Services - <%= (typeof location !== 'undefined' && location && location.businessName) ? location.businessName : 'Booking System' %></title>
  <link rel="stylesheet" href="/stylesheets/style.css">
  <link rel="stylesheet" href="/stylesheets/sidebar.css">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">  <script src="/javascripts/appointment-summary.js" defer></script>
  <style>
    /* Enhanced Next Button Styling for Appointment Summary */
    .enhanced-next-btn {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
      color: white !important;
      border: none !important;
      padding: 1rem 1.5rem !important;
      border-radius: 8px !important;
      font-size: 1rem !important;
      font-weight: 600 !important;
      cursor: pointer !important;
      transition: all 0.3s ease !important;
      width: 100% !important;
      display: flex !important;
      align-items: center !important;
      justify-content: center !important;
    }
    
    .enhanced-next-btn:disabled {
      opacity: 0.5 !important;
      cursor: not-allowed !important;
      transform: none !important;
      box-shadow: none !important;
    }
    
    .enhanced-next-btn:not(:disabled):hover {
      transform: translateY(-2px) !important;
      box-shadow: 0 4px 20px rgba(102, 126, 234, 0.3) !important;
      background: rgba(102, 126, 234, 0.8) !important;
    }
    
    .enhanced-next-btn:not(:disabled):active {
      transform: translateY(0px) !important;
      box-shadow: 0 2px 10px rgba(102, 126, 234, 0.2) !important;
    }
    
    /* Override any external CSS that might conflict */
    #appointment-summary .button-container .enhanced-next-btn {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
    }
    
    #appointment-summary .button-container .enhanced-next-btn:not(:disabled):hover {
      background: rgba(102, 126, 234, 0.8) !important;
    }
    
    .hero-section {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 3rem 0 2rem;
      margin-bottom: 2rem;
      position: relative;
      overflow: hidden;
    }
    .hero-content {
      position: relative;
      z-index: 1;
      text-align: center;
    }
    .hero-title {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 1rem;
      text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .hero-subtitle {
      font-size: 1.2rem;
      opacity: 0.9;
      margin-bottom: 2rem;
    }
    .quick-actions {
      background: white;
      border-radius: 15px;
      padding: 1.5rem;
      box-shadow: 0 5px 15px rgba(0,0,0,0.1);
      margin-top: -2rem;
      position: relative;
      z-index: 10;
      display: flex;
      justify-content: center;
      gap: 1rem;
      flex-wrap: wrap;
    }
    .book-new-btn {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border: none;
      padding: 0.75rem 1.5rem;
      border-radius: 25px;
      font-weight: 600;
      text-decoration: none;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      transition: all 0.3s ease;
      box-shadow: 0 2px 10px rgba(102, 126, 234, 0.3);
    }
    .book-new-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 20px rgba(102, 126, 234, 0.4);
      color: white;
    }
    .error-message {
      background: #f8d7da;
      color: #721c24;
      border: 1px solid #f5c6cb;
      border-radius: 10px;
      padding: 1rem;
      margin-bottom: 1.5rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .success-message {
      background: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
      border-radius: 10px;
      padding: 1rem;
      margin-bottom: 1.5rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    @media (max-width: 768px) {
      .hero-title {
        font-size: 2rem;
      }
      .quick-actions {
        margin: -1rem 1rem 2rem;
        padding: 1rem;
        flex-direction: row;
        gap: 0.8rem;
        justify-content: center;
      }
      .book-new-btn {
        padding: 0.6rem 1.2rem;
        font-size: 0.9rem;
        white-space: nowrap;
        overflow: visible;
        text-overflow: clip;
        min-width: auto;
        flex-shrink: 0;
      }
    }

    /* Fix service title overflow - override inline styles */
    .card__info h4 {
      overflow: hidden !important;
      text-overflow: ellipsis !important;
      white-space: nowrap !important;
      max-width: 100% !important;
      word-wrap: break-word !important;
      flex: 1 !important;
      min-width: 0 !important;
    }
    
    /* Fix the flex container that contains the h4 */
    .card__info > div:first-child {
      min-width: 0 !important;
      overflow: hidden !important;
    }
    
    /* Allow multi-line titles on mobile for better readability */
    @media (max-width: 768px) {
      .card__info h4 {
        white-space: normal !important;
        display: -webkit-box !important;
        -webkit-line-clamp: 2 !important;
        -webkit-box-orient: vertical !important;
        line-clamp: 2 !important;
        overflow: hidden !important;
        text-overflow: ellipsis !important;
        max-height: 2.4em !important;
      }
    }
    
    @media (max-width: 480px) {
      .card__info h4 {
        max-height: 2.6em !important;
        line-height: 1.3 !important;
      }
    }
    
    /* Ensure the card info container doesn't overflow */
    .card__info {
      min-width: 0 !important;
      overflow: hidden !important;
      flex: 1 !important;
    }
    
    /* Fix for service label container */
    .service-label {
      overflow: hidden !important;
      width: 100% !important;
    }

    /* Reduce card padding for better space utilization */
    .card__wrapper {
      padding: 18px 20px !important;
      margin-bottom: 8px !important;
    }
    
    @media (max-width: 768px) {
      .card__wrapper {
        padding: 16px 14px !important;
        margin-bottom: 6px !important;
      }
    }
    
    @media (max-width: 480px) {
      .card__wrapper {
        padding: 14px 12px !important;
      }
    }
    
    @media (max-width: 360px) {
      .card__wrapper {
        padding: 12px 10px !important;
        margin-bottom: 4px !important;
      }
    }

    /* Ensure card wrapper has enough left padding for scaled checkbox */
    .card__wrapper {
      padding-left: 22px !important;
      padding-right: 20px !important;
    }
    
    @media (max-width: 768px) {
      .card__wrapper {
        padding-left: 18px !important;
        padding-right: 14px !important;
      }
    }
    
    @media (max-width: 480px) {
      .card__wrapper {
        padding-left: 16px !important;
        padding-right: 12px !important;
      }
    }
    
    @media (max-width: 360px) {
      .card__wrapper {
        padding-left: 14px !important;
        padding-right: 10px !important;
      }
    }

    /* Service card layout fixes with new class structure */
    .service-card-info {
      flex: 1 !important;
      display: flex !important;
      flex-direction: column !important;
      gap: 6px !important;
      min-width: 0 !important;
      overflow: hidden !important;
    }
    
    .service-title-row {
      display: flex !important;
      align-items: center !important;
      gap: 10px !important;
      min-width: 0 !important;
      overflow: hidden !important;
    }
    
    .service-checkbox {
      margin: 0 8px 0 4px !important;
      transform: scale(1.2) !important;
      flex-shrink: 0 !important;
      position: relative !important;
    }
    
    .service-title {
      margin: 0 !important;
      font-size: 1.15em !important;
      font-weight: 600 !important;
      line-height: 1.2 !important;
      overflow: hidden !important;
      text-overflow: ellipsis !important;
      white-space: nowrap !important;
      flex: 1 !important;
      min-width: 0 !important;
    }
    
    /* Mobile responsive behavior for titles */
    @media (max-width: 768px) {
      .service-title {
        white-space: normal !important;
        display: -webkit-box !important;
        -webkit-line-clamp: 2 !important;
        -webkit-box-orient: vertical !important;
        line-clamp: 2 !important;
        overflow: hidden !important;
        text-overflow: ellipsis !important;
        max-height: 2.4em !important;
      }
    }
    
    @media (max-width: 480px) {
      .service-title {
        font-size: 1.05em !important;
        max-height: 2.6em !important;
        line-height: 1.3 !important;
      }
    }
    
    @media (max-width: 360px) {
      .service-title {
        font-size: 1em !important;
      }
    }
  </style>
</head>

<body>
  <!-- Hero Section -->
  <div class="hero-section">
    <div class="container">
      <div class="hero-content">
        <h1 class="hero-title">Book Your Appointment</h1>
        <p class="hero-subtitle">Choose from our professional services and book instantly</p>
      </div>
    </div>
  </div>

  <!-- Quick Actions -->
  <div class="container">
    <div class="quick-actions">
      <span class="book-new-btn">
        <i class="fas fa-calendar-plus"></i>
        Book New Appointment
      </span>
    </div>
  </div>

  <!-- Cancel Success Notice -->
  <% if (typeof cancel !== 'undefined' && cancel === "success") { %>
    <div id="cancel-success-notice" style="position:fixed;bottom:24px;left:50%;transform:translateX(-50%);z-index:1001;text-align:center;font-weight:600;color:#fff;background:#28a745;border:none;padding:16px 38px;border-radius:10px;font-size:1.13em;box-shadow:0 4px 24px rgba(40,167,69,0.18);opacity:0.97;display:flex;align-items:center;gap:10px;cursor:pointer;">
      <i class="fas fa-check-circle" style="font-size:1.2em;"></i>
      Your booking was cancelled successfully!
    </div>
  <% } %>

  <header>
    <%- include("../partials/header") %>
  </header>

  <div class="content" style="display: flex; flex-direction: row; gap: 2.5em;">
    <!-- Main service list -->
    <div class="content-main services" style="flex: 2 1 0;">
      
      <!-- Error Message -->
      <% if (typeof error !== 'undefined' && error) { %>
        <div class="error-message">
          <i class="fas fa-exclamation-triangle"></i>
          <%= error %>
        </div>
      <% } %>

      <!-- Category Tabs -->
      <% if (typeof allCategories !== 'undefined' && allCategories && allCategories.length > 1) { %>
        <div class="category-tabs" style="display: flex; gap: 1em; margin-bottom: 1.5em; border-bottom: 1px solid #eee; flex-wrap: wrap;">
          <% allCategories.forEach(function(cat, idx) { %>
            <button type="button" class="category-tab" data-category="<%= cat.id %>" aria-selected="<%= idx === 0 ? 'true' : 'false' %>" style="background:#f8f8f8;border:2px solid #e9ecef;border-bottom:3px solid <%= idx === 0 ? '#0070f3' : 'transparent' %>;padding:10px 18px;font-size:1em;cursor:pointer;font-weight:<%= idx === 0 ? 'bold' : 'normal' %>;color:<%= idx === 0 ? '#0070f3' : '#222' %>;border-radius:6px 6px 0 0;margin-bottom:-2px;min-width:100px;transition:all 0.2s ease;"> 
              <%= cat.name %> 
            </button>
          <% }); %>
        </div>
      <% } %>

      <form id="services-form" action="/services/select" method="POST">
        <div class="cards two-col-cards">
          <% if (typeof allCategories !== 'undefined' && allCategories && allCategories.length > 0) { %>
            <% allCategories.forEach(function(cat, idx) { %>
              <div class="service-category" data-category-panel="<%= cat.id %>" style="display:<%= idx === 0 ? 'block' : 'none' %>;grid-column: 1 / -1;">
                <div class="two-col-inner">
                  <% if (typeof categorized !== 'undefined' && categorized && categorized[cat.id] && categorized[cat.id].length > 0) { %>
                    <% categorized[cat.id].forEach(function(item, itemIdx) { %>
                      <% if (item && item.itemData && item.itemData.variations) { %>
                        <% item.itemData.variations.forEach(function(variation) { %>
                          <% var hasPrice = variation && variation.itemVariationData && variation.itemVariationData.priceMoney; %>
                          <div class="card__wrapper<%= hasPrice ? '' : ' card__wrapper--disabled' %>">
                            <label class="service-label<%= hasPrice ? '' : ' service-label--disabled' %>" style="width:100%;align-items:flex-start;gap:18px;">
                              <div class="card__image">
                                <% 
                                  let imgUrl = null;
                                  if (item.itemData.imageIds && item.itemData.imageIds.length > 0 && typeof imageMap !== 'undefined' && imageMap) {
                                    imgUrl = imageMap[item.itemData.imageIds[0]];
                                  }
                                %>
                                <img src="<%= imgUrl ? imgUrl : '/images/blank-logo-sm.svg' %>" alt="<%= item.itemData.name || 'Service' %>" loading="lazy">
                              </div>
                              <div class="card__info service-card-info">
                                <div class="service-title-row">
                                  <input type="checkbox" name="services[]" value="<%= variation.id %>" class="service-checkbox" <%= hasPrice ? '' : 'disabled' %>>
                                  <h4 class="service-title"><%= item.itemData.name || 'Service' %></h4>
                                </div>
                                <div style="display:flex;align-items:center;gap:12px;margin-top:2px;">
                                  <% if (variation.itemVariationData && variation.itemVariationData.pricingType === "FIXED_PRICING" && variation.itemVariationData.priceMoney) { %>
                                    <span style="font-weight:500;color:#0070f3;font-size:1.05em;"><%= formatMoney(variation.itemVariationData.priceMoney.amount, variation.itemVariationData.priceMoney.currency) %></span>
                                    <span style="color:#888;font-size:0.98em;">• <%= formatTime(variation.itemVariationData.serviceDuration) %></span>
                                  <% } else { %>
                                    <span style="color:#d00;font-weight:bold;">Call/Text for Estimate</span>
                                  <% } %>
                                </div>
                                <div style="margin-top:2px;">
                                  <% 
                                    // Gather secondary image URLs for this item - with safety checks
                                    var secondaryImageUrls = [];
                                    if (typeof itemSecondaryImages !== 'undefined' && itemSecondaryImages && itemSecondaryImages[item.id] && itemSecondaryImages[item.id].length > 0) {
                                      itemSecondaryImages[item.id].forEach(function(imgId) {
                                        if (typeof imageMap !== 'undefined' && imageMap && imageMap[imgId]) {
                                          secondaryImageUrls.push(imageMap[imgId]);
                                        }
                                      });
                                    }
                                    
                                    var serviceData = {
                                      name: item.itemData.name || 'Service',
                                      description: item.itemData.description || "No description available.",
                                      id: variation.id,
                                      price: (variation.itemVariationData && variation.itemVariationData.priceMoney) ? formatMoney(variation.itemVariationData.priceMoney.amount, variation.itemVariationData.priceMoney.currency) : null,
                                      secondaryImages: secondaryImageUrls
                                    };
                                  %>
                                  <a href="#" class="see-detail-link" data-service='<%- JSON.stringify(serviceData) %>' style="font-size:0.98em; color:#0070f3; text-decoration:underline;">See detail</a>
                                </div>
                                <div class="quantity-control" style="margin-top:8px;" <%= hasPrice ? '' : 'style=\"pointer-events:none;opacity:0.5;\"' %>>
                                  <button type="button" class="qty-btn" onclick="changeQty('<%= variation.id %>', -1)" <%= hasPrice ? '' : 'disabled' %>>-</button>
                                  <span id="qty-display-<%= variation.id %>">1</span>
                                  <button type="button" class="qty-btn" onclick="changeQty('<%= variation.id %>', 1)" <%= hasPrice ? '' : 'disabled' %>>+</button>
                                  <input type="hidden" name="quantities[<%= variation.id %>]" value="1" id="quantity-<%= variation.id %>" autocomplete="off">
                                </div>
                              </div>
                            </label>
                          </div>
                        <% }); %>
                      <% } %>
                    <% }); %>
                  <% } else { %>
                    <div class="card__wrapper disabled" style="justify-content:center;text-align:center;padding:2em 0;grid-column: 1 / -1;">
                      <i class="fas fa-info-circle" style="font-size:2rem;color:#ccc;margin-bottom:1rem;"></i>
                      <p>No services available in this category.</p>
                    </div>
                  <% } %>
                </div>
              </div>
            <% }); %>
          <% } else { %>
            <!-- Fallback if no categories or items -->
            <div class="card__wrapper disabled" style="justify-content:center;text-align:center;padding:3em 0;grid-column: 1 / -1;">
              <i class="fas fa-calendar-times" style="font-size:3rem;color:#ccc;margin-bottom:1rem;"></i>
              <h3>No Services Available</h3>
              <p>Please check back later or contact us directly.</p>
              <% if (typeof items !== 'undefined' && items && items.length > 0) { %>
                <!-- Fallback: show items without categories -->
                <div style="margin-top: 2rem;">
                  <% items.forEach(function(item) { %>
                    <% if (item && item.itemData && item.itemData.variations) { %>
                      <% item.itemData.variations.forEach(function(variation) { %>
                        <% var hasPrice = variation && variation.itemVariationData && variation.itemVariationData.priceMoney; %>
                        <div class="card__wrapper<%= hasPrice ? '' : ' card__wrapper--disabled' %>" style="margin-bottom: 1rem;">
                          <label class="service-label<%= hasPrice ? '' : ' service-label--disabled' %>" style="width:100%;align-items:flex-start;gap:18px;">
                            <div class="card__image">
                              <img src="/images/blank-logo-sm.svg" alt="<%= item.itemData.name || 'Service' %>" loading="lazy">
                            </div>
                            <div class="card__info service-card-info">
                              <div class="service-title-row">
                                <input type="checkbox" name="services[]" value="<%= variation.id %>" class="service-checkbox" <%= hasPrice ? '' : 'disabled' %>>
                                <h4 class="service-title"><%= item.itemData.name || 'Service' %></h4>
                              </div>
                              <div style="display:flex;align-items:center;gap:12px;margin-top:2px;">
                                <% if (variation.itemVariationData && variation.itemVariationData.pricingType === "FIXED_PRICING" && variation.itemVariationData.priceMoney) { %>
                                  <span style="font-weight:500;color:#0070f3;font-size:1.05em;"><%= formatMoney(variation.itemVariationData.priceMoney.amount, variation.itemVariationData.priceMoney.currency) %></span>
                                  <span style="color:#888;font-size:0.98em;">• <%= formatTime(variation.itemVariationData.serviceDuration) %></span>
                                <% } else { %>
                                  <span style="color:#d00;font-weight:bold;">Call/Text for Estimate</span>
                                <% } %>
                              </div>
                              <div class="quantity-control" style="margin-top:8px;" <%= hasPrice ? '' : 'style=\"pointer-events:none;opacity:0.5;\"' %>>
                                <button type="button" class="qty-btn" onclick="changeQty('<%= variation.id %>', -1)" <%= hasPrice ? '' : 'disabled' %>>-</button>
                                <span id="qty-display-<%= variation.id %>">1</span>
                                <button type="button" class="qty-btn" onclick="changeQty('<%= variation.id %>', 1)" <%= hasPrice ? '' : 'disabled' %>>+</button>
                                <input type="hidden" name="quantities[<%= variation.id %>]" value="1" id="quantity-<%= variation.id %>" autocomplete="off">
                              </div>
                            </div>
                          </label>
                        </div>
                      <% }); %>
                    <% } %>
                  <% }); %>
                </div>
              <% } %>
            </div>
          <% } %>
        </div>
      </form>

      <!-- Service Limit Notice -->
      <div id="service-limit-notice" style="display:none;position:fixed;top:20px;left:50%;transform:translateX(-50%);z-index:1000;color:#d00;font-weight:bold;text-align:center;padding:1rem 1.5rem;background:#fff5f5;border:2px solid #fed7d7;border-radius:12px;box-shadow:0 8px 32px rgba(0,0,0,0.15);animation:slideDown 0.3s ease-out;max-width:90vw;width:auto;white-space:nowrap;height:auto;min-height:auto;max-height:none;">
        <button onclick="closeNotice('service-limit-notice')" style="position:absolute;top:8px;right:12px;background:none;border:none;color:#d00;font-size:1.2rem;cursor:pointer;line-height:1;padding:4px;border-radius:50%;transition:background 0.2s;" onmouseover="this.style.background='rgba(215,53,39,0.1)'" onmouseout="this.style.background='none'">&times;</button>
        <i class="fas fa-exclamation-triangle" style="margin-right:8px;"></i>
        You can select up to 3 different services and a total of 3 items only.
      </div>

      <!-- Call Us Message -->
      <div id="call-us-message" style="display:none;position:fixed;top:110px;left:50%;transform:translateX(-50%);z-index:999;color:#666;text-align:center;padding:1rem 1.5rem;background:#f8f9fa;border:2px solid #dee2e6;border-radius:12px;box-shadow:0 8px 32px rgba(0,0,0,0.15);animation:slideDown 0.3s ease-out;max-width:90vw;width:auto;white-space:nowrap;height:auto;min-height:auto;max-height:none;">
        <button onclick="closeNotice('call-us-message')" style="position:absolute;top:8px;right:12px;background:none;border:none;color:#666;font-size:1.2rem;cursor:pointer;line-height:1;padding:4px;border-radius:50%;transition:background 0.2s;" onmouseover="this.style.background='rgba(0,0,0,0.1)'" onmouseout="this.style.background='none'">&times;</button>
        <i class="fas fa-phone" style="margin-right:8px;"></i>
        Need more than 3 services? Please call us to book your appointment.
      </div>

      <!-- Animation styles for floating notices -->
      <style>
        @keyframes slideDown {
          from {
            opacity: 0;
            transform: translateX(-50%) translateY(-20px);
          }
          to {
            opacity: 1;
            transform: translateX(-50%) translateY(0);
          }
        }
        
        @keyframes slideUp {
          from {
            opacity: 1;
            transform: translateX(-50%) translateY(0);
          }
          to {
            opacity: 0;
            transform: translateX(-50%) translateY(-20px);
          }
        }
        
        .sliding-out {
          animation: slideUp 0.3s ease-out forwards !important;
        }
        
        /* Responsive adjustments */
        @media (max-width: 768px) {
          #service-limit-notice,
          #call-us-message {
            left: 10px !important;
            right: 10px !important;
            transform: none !important;
            max-width: calc(100vw - 20px) !important;
            width: auto !important;
            white-space: normal !important;
            font-size: 0.9rem !important;
            height: auto !important;
            min-height: auto !important;
            max-height: none !important;
            line-height: 1.4 !important;
            padding: 0.8rem 1rem !important;
            overflow: visible !important;
            box-sizing: border-box !important;
          }
          
          #call-us-message {
            top: 85px !important;
          }
        }
        
        @media (max-width: 480px) {
          #service-limit-notice,
          #call-us-message {
            font-size: 0.85rem !important;
            padding: 0.7rem 0.8rem !important;
            top: 15px !important;
          }
          
          #call-us-message {
            top: 75px !important;
          }
        }
      </style>

      <!-- Grid Styles -->
      <style>
        .two-col-cards {
          display: grid;
          grid-template-columns: 1fr;
          gap: 1.2em;
        }
        .two-col-inner {
          display: grid;
          grid-template-columns: 1fr;
          gap: 1.2em;
        }
        /* Force single column layout for better title display */
        @media (min-width: 700px) {
          .two-col-inner {
            grid-template-columns: 1fr;
            max-width: 800px;
            margin: 0 auto;
          }
        }
        .category-tab:hover {
          background: #f0f7ff !important;
          border-color: #0070f3 !important;
          color: #0070f3 !important;
        }
      </style>
    </div>
    
    <!-- Include the appointment summary partial -->
    <%- include("../partials/appointment-summary") %>
  </div>
  
  <!-- Service Detail Modal -->
  <div id="service-detail-modal" class="service-detail-modal" style="display: none;">
    <div class="service-detail-dialog">
      <span class="service-detail-close" onclick="closeServiceDetail()">&times;</span>
      <h3 id="modal-service-name" style="margin: 0 0 16px 0; font-size: 1.4em; font-weight: 700;"></h3>
      <p id="modal-service-description" style="margin: 0 0 12px 0; color: #666; line-height: 1.5;"></p>
      <p id="modal-service-price" style="margin: 0 0 16px 0; font-weight: 600; color: #0070f3; font-size: 1.1em;"></p>
      
      <!-- Secondary Images -->
      <div id="modal-service-secondary-images" style="display: none; flex-wrap: wrap; gap: 8px; margin: 16px 0;">
        <!-- Images will be dynamically inserted here -->
      </div>
      
      <div style="display: flex; gap: 12px; margin-top: 24px;">
        <button onclick="closeServiceDetail()" class="button" style="background: #f5f5f5; color: #333; border: 1px solid #ddd;">
          Close
        </button>
      </div>
    </div>
  </div>

  <!-- Include all the existing JavaScript -->
  <script>
    // Category tab switching logic
    document.addEventListener('DOMContentLoaded', function() {
      var tabs = document.querySelectorAll('.category-tab');
      var panels = document.querySelectorAll('.service-category[data-category-panel]');
      
      if (tabs.length > 0 && panels.length > 0) {
        tabs.forEach(function(tab) {
          tab.addEventListener('click', function() {
            var selected = this.getAttribute('data-category');
            // Switch tab styles
            tabs.forEach(function(t) {
              t.style.borderBottom = '3px solid transparent';
              t.style.fontWeight = 'normal';
              t.style.color = '#222';
              t.setAttribute('aria-selected', 'false');
              t.style.background = '#f8f8f8';
            });
            this.style.borderBottom = '3px solid #0070f3';
            this.style.fontWeight = 'bold';
            this.style.color = '#0070f3';
            this.setAttribute('aria-selected', 'true');
            this.style.background = '#fff';
            // Show/hide panels
            panels.forEach(function(panel) {
              if (panel.getAttribute('data-category-panel') === selected) {
                panel.style.display = 'block';
              } else {
                panel.style.display = 'none';
              }
            });
          });
        });
      }
    });

    // Rest of your existing JavaScript with safety checks
    function changeQty(id, delta) {
      var input = document.getElementById('quantity-' + id);
      var display = document.getElementById('qty-display-' + id);
      var checkbox = document.querySelector('input[type="checkbox"][value="' + id + '"]');
      
      if (!input || !display) return;
      
      var val = parseInt(input.value, 10) || 1;
      val += delta;
      if (val < 1) val = 1;
      if (val > 3) val = 3;
      input.value = val;
      display.textContent = val;
      
      // If user increases quantity, auto-check the box
      if (checkbox && !checkbox.checked && !checkbox.disabled) {
        checkbox.checked = true;
        var event = new Event('change', { bubbles: true });
        checkbox.dispatchEvent(event);
      }
      
      // Always update limits and continue button
      if (typeof enforceLimits === 'function') enforceLimits();
      
      // Trigger appointment summary update via custom event
      // This ensures the external appointment-summary.js can respond regardless of load timing
      var summaryUpdateEvent = new CustomEvent('quantityChanged', {
        detail: { serviceId: id, newQuantity: val }
      });
      document.dispatchEvent(summaryUpdateEvent);
      
      // Also try direct function call as fallback
      if (typeof updateAppointmentSummary === 'function') updateAppointmentSummary();
    }

    const MAX_DIFFERENT_SERVICES = 3;
    const MAX_TOTAL_AMOUNT = 3;

    function enforceLimits() {
      console.log('DEBUG: enforceLimits called');
      const form = document.querySelector('form[action="/services/select"]');
      if (!form) return;

      const elements = {
        checkboxes: form.querySelectorAll('input[type="checkbox"][name="services[]"]'),
        continueBtn: document.getElementById('continue-btn'),
        bottomBar: document.getElementById('summary-bottom-bar'),
        callUsMsg: document.getElementById('call-us-message'),
        notice: document.getElementById('service-limit-notice'),
        summaryBarNext: document.getElementById('summary-bar-next'),
        summarySheetNext: document.getElementById('summary-sheet-next')
      };

      console.log('DEBUG: Elements found:', {
        checkboxes: elements.checkboxes.length,
        continueBtn: !!elements.continueBtn,
        bottomBar: !!elements.bottomBar,
        callUsMsg: !!elements.callUsMsg,
        notice: !!elements.notice,
        summaryBarNext: !!elements.summaryBarNext,
        summarySheetNext: !!elements.summarySheetNext
      });

      let state = { checkedCount: 0, totalQty: 0 };

      // Calculate totals and update quantities
      elements.checkboxes.forEach(cb => {
        const qtyInput = document.getElementById('quantity-' + cb.value);
        const qtyDisplay = document.getElementById('qty-display-' + cb.value);
        
        if (cb.checked) {
          state.checkedCount++;
          if (qtyInput) {
            qtyInput.disabled = false;
            let val = Math.max(1, Math.min(MAX_TOTAL_AMOUNT, parseInt(qtyInput.value, 10) || 1));
            qtyInput.value = val;
            if (qtyDisplay) qtyDisplay.textContent = val;
            state.totalQty += val;
          }
        } else {
          if (qtyInput) {
            qtyInput.disabled = true;
            qtyInput.value = 1;
            if (qtyDisplay) qtyDisplay.textContent = 1;
          }
        }
      });

      // Determine states
      const hasSelections = state.checkedCount > 0;
      const overLimits = state.checkedCount > MAX_DIFFERENT_SERVICES || state.totalQty > MAX_TOTAL_AMOUNT;

      console.log('DEBUG: Service limits state:', {
        checkedCount: state.checkedCount,
        totalQty: state.totalQty,
        hasSelections,
        overLimits,
        MAX_DIFFERENT_SERVICES,
        MAX_TOTAL_AMOUNT
      });

      // Update checkboxes state
      elements.checkboxes.forEach(cb => {
        if (!cb.checked) {
          cb.disabled = state.checkedCount >= MAX_DIFFERENT_SERVICES;
        }
      });

      // Update UI visibility with smooth animations
      if (elements.notice) {
        if (overLimits && elements.notice.style.display === 'none') {
          // Show with animation
          elements.notice.style.display = 'block';
          elements.notice.classList.remove('sliding-out');
        } else if (!overLimits && elements.notice.style.display !== 'none') {
          // Hide with animation
          elements.notice.classList.add('sliding-out');
          setTimeout(() => {
            elements.notice.style.display = 'none';
            elements.notice.classList.remove('sliding-out');
          }, 300);
        }
      }

      // Update call us message with smooth animations
      if (elements.callUsMsg) {
        if (overLimits && elements.callUsMsg.style.display === 'none') {
          // Show with animation
          elements.callUsMsg.style.display = 'block';
          elements.callUsMsg.classList.remove('sliding-out');
        } else if (!overLimits && elements.callUsMsg.style.display !== 'none') {
          // Hide with animation
          elements.callUsMsg.classList.add('sliding-out');
          setTimeout(() => {
            elements.callUsMsg.style.display = 'none';
            elements.callUsMsg.classList.remove('sliding-out');
          }, 300);
        }
      }

      // Update continue button and mobile bar button states
      [elements.continueBtn, elements.summaryBarNext, elements.summarySheetNext].forEach(btn => {
        if (btn) {
          if (hasSelections) {
            btn.style.display = '';
            btn.disabled = overLimits;
            if (overLimits) {
              btn.setAttribute('disabled', 'disabled');
              btn.style.opacity = '0.5';
              btn.style.cursor = 'not-allowed';
            } else {
              btn.removeAttribute('disabled');
              btn.style.opacity = '1';
              btn.style.cursor = 'pointer';
            }
            if (btn === elements.continueBtn) {
              btn.classList.toggle('continue-fixed-btn-active', !overLimits);
            }
          } else {
            btn.style.display = 'none';
          }
        }
      });

      // Also update any buttons that might be created by appointment-summary.js
      setTimeout(() => {
        ['continue-btn', 'summary-bar-next', 'summary-sheet-next'].forEach(id => {
          const btn = document.getElementById(id);
          if (btn) {
            if (hasSelections) {
              btn.style.display = '';
              btn.disabled = overLimits;
              if (overLimits) {
                btn.setAttribute('disabled', 'disabled');
                btn.style.opacity = '0.5';
                btn.style.cursor = 'not-allowed';
              } else {
                btn.removeAttribute('disabled');
                btn.style.opacity = '1';
                btn.style.cursor = 'pointer';
              }
            } else {
              btn.style.display = 'none';
            }
          }
        });
      }, 100);

      // Update mobile bottom bar visibility
      if (elements.bottomBar && hasSelections) {
        elements.bottomBar.classList.add('show');
      } else if (elements.bottomBar) {
        elements.bottomBar.classList.remove('show');
      }

      // Dispatch custom event to notify appointment summary about limit changes
      document.dispatchEvent(new CustomEvent('serviceLimitsChanged', {
        detail: { 
          hasSelections, 
          overLimits, 
          checkedCount: state.checkedCount, 
          totalQty: state.totalQty,
          maxServices: MAX_DIFFERENT_SERVICES,
          maxTotal: MAX_TOTAL_AMOUNT
        }
      }));
    }

    function closeServiceDetail() {
      var modal = document.getElementById('service-detail-modal');
      if (modal) modal.style.display = 'none';
    }

    // Initialize everything on page load
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.querySelector('form[action="/services/select"]');
      if (!form) return;
      
      const checkboxes = form.querySelectorAll('input[type="checkbox"][name="services[]"]');
      
      // Add event listeners
      checkboxes.forEach(cb => {
        cb.addEventListener('change', function() {
          enforceLimits();
          if (typeof updateAppointmentSummary === 'function') {
            updateAppointmentSummary();
          }
          if (typeof updateBarAndSheet === 'function') {
            updateBarAndSheet();
          }
        });
        
        const qtyInput = document.getElementById('quantity-' + cb.value);
        if (qtyInput) {
          qtyInput.addEventListener('input', function() {
            enforceLimits();
            if (typeof updateAppointmentSummary === 'function') {
              updateAppointmentSummary();
            }
            if (typeof updateBarAndSheet === 'function') {
              updateBarAndSheet();
            }
          });
        }
      });
      
      enforceLimits();

      // Ensure appointment summary is aware of initial state
      setTimeout(() => {
        enforceLimits();
        // Trigger appointment summary update if available
        if (typeof updateAppointmentSummary === 'function') {
          updateAppointmentSummary();
        }
      }, 200);

      // Service detail modal handling
      document.querySelectorAll('.see-detail-link').forEach(function(link) {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          try {
            var data = JSON.parse(this.getAttribute('data-service'));
            var modal = document.getElementById('service-detail-modal');
            var nameEl = document.getElementById('modal-service-name');
            var descEl = document.getElementById('modal-service-description');
            var priceEl = document.getElementById('modal-service-price');
            
            if (nameEl) nameEl.textContent = data.name || '';
            if (descEl) descEl.textContent = data.description || '';
            if (priceEl) priceEl.textContent = data.price ? 'Price: ' + data.price : '';
            
            // Render secondary images
            var secImgDiv = document.getElementById('modal-service-secondary-images');
            if (secImgDiv) {
              secImgDiv.innerHTML = '';
              if (data.secondaryImages && data.secondaryImages.length > 0) {
                data.secondaryImages.forEach(function(url) {
                  var img = document.createElement('img');
                  img.src = url;
                  img.alt = data.name + ' photo';
                  img.style.width = '70px';
                  img.style.height = '70px';
                  img.style.objectFit = 'cover';
                  img.style.borderRadius = '8px';
                  img.style.border = '1.5px solid #eee';
                  img.style.boxShadow = '0 1px 4px rgba(0,0,0,0.04)';
                  img.style.cursor = 'pointer';
                  img.addEventListener('click', function(e) {
                    e.stopPropagation();
                    if (typeof showBigImage === 'function') {
                      showBigImage(url, data.name);
                    }
                  });
                  secImgDiv.appendChild(img);
                });
              }
              secImgDiv.style.display = (data.secondaryImages && data.secondaryImages.length > 0) ? 'flex' : 'none';
            }

            if (modal) modal.style.display = 'flex';
          } catch (error) {
            console.error('Error parsing service data:', error);
          }
        });
      });

      // Hide cancel success notice
      var cancelNotice = document.getElementById('cancel-success-notice');
      if (cancelNotice) {
        function hideNotice() {
          cancelNotice.style.display = 'none';
          document.removeEventListener('click', hideNotice, true);
          document.removeEventListener('touchstart', hideNotice, true);
        }
        cancelNotice.addEventListener('click', hideNotice);
        setTimeout(function() {
          document.addEventListener('click', hideNotice, true);
          document.addEventListener('touchstart', hideNotice, true);
        }, 100);
      }

      // Prevent submit if limits violated
      form.addEventListener('submit', function(e) {
        let checkedCount = 0;
        let totalQty = 0;
        checkboxes.forEach(cb => {
          if (!cb.checked) return;
          checkedCount++;
          const qtyInput = document.getElementById('quantity-' + cb.value);
          let qty = qtyInput && !qtyInput.disabled ? parseInt(qtyInput.value, 10) || 0 : 0;
          totalQty += qty;
        });
        if (checkedCount > MAX_DIFFERENT_SERVICES || totalQty > MAX_TOTAL_AMOUNT || checkedCount === 0 || totalQty === 0) {
          e.preventDefault();
          enforceLimits();
        }
      });
    });

    // Helper to show large image overlay
    window.showBigImage = function(url, name) {
      var overlay = document.createElement('div');
      overlay.style.position = 'fixed';
      overlay.style.top = '0';
      overlay.style.left = '0';
      overlay.style.width = '100vw';
      overlay.style.height = '100vh';
      overlay.style.background = 'rgba(0,0,0,0.7)';
      overlay.style.display = 'flex';
      overlay.style.alignItems = 'center';
      overlay.style.justifyContent = 'center';
      overlay.style.zIndex = '9999';
      overlay.addEventListener('click', function() { document.body.removeChild(overlay); });
      var img = document.createElement('img');
      img.src = url;
      img.alt = name + ' large photo';
      img.style.maxWidth = '90vw';
      img.style.maxHeight = '90vh';
      img.style.borderRadius = '12px';
      img.style.boxShadow = '0 4px 32px rgba(0,0,0,0.25)';
      img.style.background = '#fff';
      img.style.display = 'block';
      overlay.appendChild(img);
      document.body.appendChild(overlay);
    };

    // Initialize appointment summary functions if they exist
    if (typeof updateAppointmentSummary === 'function') {
      window.updateAppointmentSummary = updateAppointmentSummary;
    }
    if (typeof updateBarAndSheet === 'function') {
      window.updateBarAndSheet = updateBarAndSheet;
    }

    // Function to close floating notices
    function closeNotice(noticeId) {
      const notice = document.getElementById(noticeId);
      if (notice) {
        notice.style.animation = 'slideUp 0.3s ease-in';
        setTimeout(() => {
          notice.style.display = 'none';
          notice.style.animation = '';
        }, 300);
      }
    }

    // Make closeNotice globally available
    window.closeNotice = closeNotice;
  </script>
</body>
</html>